{"version":3,"sources":["components/graph.component.tsx","components/rules-list.component.tsx","components/grammar.component.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GraphComponent","props","myRef","createRef","height","width","React","useState","state","setState","options","interaction","hover","edges","arrows","to","manipulation","enabled","manipulate","addNode","nodeData","callback","letter","svg","abbrev","url","encodeURIComponent","label","shape","image","graph","nodes","push","id","updateParent","console","log","addEdge","edgeData","deleteNode","i","length","j","splice","deleteEdge","processGraph","data","node","Object","assign","useEffect","divElement","current","network","Network","setOptions","className","ref","RulesListComponent","defaultDialogState","open","textField","error","emptyLetter","terminality","defaultRule","name","lhs","rhs","currentRule","dialogState","handleClose","useTheme","rules","Select","labelId","variant","value","onChange","e","ruleName","target","rightRule","find","rule","changeSelectRule","style","map","MenuItem","Divider","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","margin","required","fullWidth","DialogActions","Button","onClick","color","checkIfRepeated","newRule","createRule","Grid","container","justify","spacing","item","returnValue","createLHS","orientation","flexItem","createRHS","GrammarComponent","selectedRule","grammar","grammar_json","axiom","textAlign","App","route","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.35278b52.chunk.js","sourcesContent":["import React, { createRef, useEffect, useContext } from 'react';\nimport { Network } from \"vis-network/standalone/esm/vis-network\"\nimport { Letter } from '../util/alphabet';\nimport { IGraph } from '../util/graph';\n\ninterface Props {\n    graph: IGraph,\n    width?: number,\n    height?: number,\n    updateParent?: () => void,\n    manipulate: boolean\n    letter: Letter\n}\n\nexport default function GraphComponent(props: Props) {\n\n    const myRef = createRef<HTMLDivElement>();\n    const largeHeight = props.height == null ? 100 : props.height\n    const largeWidth = props.width == null ? 100 : props.width\n\n\n    var network = {}\n\n    const [state, setState] = React.useState({});\n    const handleAddNode = (nodeData: any, callback: any) => {\n\n        if (!props.letter) {\n            console.log(\"this is where I should alter the user that no icon is selected\")\n            return\n        }\n        var svg =\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"75\" height=\"75\">' +\n            '<circle cx=\"37.5\" cy=\"37.5\" r=\"35\" fill=\"#aeaeae\" />' +\n            '<text x=\"50%\" y=\"50%\" text-anchor=\"middle\" fill=\"white\" font-size=\"x-large\" font-family=\"Arial\" dy=\".3em\">' + props.letter.abbrev + '</text>' +\n            'Sorry, your browser does not support inline SVG.' +\n            \"</svg>\";\n\n        var url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(svg);\n        /* console.log(svg);\n         * console.log(url); */\n\n        nodeData.label = props.letter.label;\n        nodeData.shape = \"circularImage\";\n        nodeData.abbrev = props.letter.abbrev\n        nodeData.image = url;\n        callback(nodeData);\n        props.graph.nodes.push({ label: nodeData.label, abbrev: nodeData.abbrev, id: nodeData.id });\n        if (props.updateParent) {\n            props.updateParent();\n        }\n    }\n\n    const handleAddEdge = (edgeData: any, callback: any) => {\n        callback(edgeData);\n        props.graph.edges.push(edgeData)\n        if (props.updateParent) {\n            props.updateParent();\n        }\n    }\n\n\n    const handleDeleteNode = (nodeData: any, callback: any) => {\n        callback(nodeData);\n        for (var i = 0; i < nodeData.nodes.length; i++) {\n            for (var j = 0; j < props.graph.nodes.length; j++) {\n                if (nodeData.nodes == props.graph.nodes[j].id) {\n                    props.graph.nodes.splice(j, 1);\n                }\n            }\n        }\n        for (var i = 0; i < nodeData.edges.length; i++) {\n            for (var j = 0; j < props.graph.edges.length; j++) {\n                if (nodeData.edges == props.graph.edges[j].id) {\n                    props.graph.edges.splice(j, 1);\n                }\n            }\n        }\n        if (props.updateParent) {\n            props.updateParent();\n        }\n    }\n    const handleDeleteEdge = (edgeData: any, callback: any) => {\n        callback(edgeData);\n        for (var i = 0; i < edgeData.edges.length; i++) {\n            for (var j = 0; j < props.graph.edges.length; j++) {\n                if (edgeData.edges == props.graph.edges[j].id) {\n                    props.graph.edges.splice(j, 1);\n                }\n            }\n        }\n        if (props.updateParent) {\n            props.updateParent();\n        }\n    }\n    var options = {\n        interaction: { hover: true },\n        edges: {\n            arrows: { to: true}\n        },\n        manipulation: {\n            enabled: props.manipulate,\n            addNode: handleAddNode,\n            addEdge: handleAddEdge,\n            deleteNode: handleDeleteNode,\n            deleteEdge: handleDeleteEdge\n        },\n\n    }\n\n    // create an array with edges\n\n    /* var data = {\n     *     nodes: props.graph.nodes,\n     *     edges: props.graph.edges,\n     * }; */\n\n    var processGraph = (graph: IGraph) => {\n\n        var nodes: Array<any> = []\n        var edges: Array<any> = []\n        var data = { nodes: nodes, edges: edges }\n\n        for (var i = 0; i < graph.nodes.length; i++) {\n            var node: any = Object.assign({}, graph.nodes[i]);\n            var svg =\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"75\" height=\"75\">' +\n                '<circle cx=\"37.5\" cy=\"37.5\" r=\"35\" fill=\"#aeaeae\" />' +\n                '<text x=\"50%\" y=\"50%\" text-anchor=\"middle\" fill=\"white\" font-size=\"x-large\" font-family=\"Arial\" dy=\".3em\">' + graph.nodes[i].abbrev + '</text>' +\n                'Sorry, your browser does not support inline SVG.' +\n                \"</svg>\";\n\n            var url = \"data:image/svg+xml;charset=utf-8,\" + encodeURIComponent(svg);\n\n            node.shape = \"circularImage\";\n            node.image = url;\n            data.nodes.push(node)\n        }\n        data.edges = graph.edges\n\n        return data\n    }\n\n    useEffect(() => {\n\n        var divElement = myRef.current\n        if (divElement == null) {\n            return;\n        }\n\n        processGraph(props.graph)\n\n        var data = processGraph(props.graph)\n        var network = new Network(divElement, data, options)\n        setState(network)\n\n        if (props.updateParent) {\n            props.updateParent();\n        }\n\n    }, [props.graph]);\n    useEffect(() => {\n        //I hate myself\n        if (state instanceof Network) {\n            state.setOptions(options);\n        }\n    }, [props.letter]);\n\n    return (\n        <div className=\"graphWindow\" ref={myRef} >\n        </div>\n\n    )\n\n}\n","import React, { createRef, Component, useState, useEffect } from 'react';\nimport GraphComponent from './graph.component'\nimport { Button, Select, Grid, MenuItem, Dialog, DialogActions, DialogContent, TextField, DialogTitle, DialogContentText, Divider, Fab, useTheme } from '@material-ui/core'\nimport { IGraph, IRule } from '../util/graph';\n\n\ninterface Props {\n    changeSelectRule: (rule: IRule) => void,\n    rules: Array<IRule>\n}\n\ninterface DialogState {\n    open: boolean\n    textField: string\n    error: boolean\n}\ninterface State {\n    currentRule: IRule\n    dialogState: DialogState\n}\n\n\n\nexport default function RulesListComponent(props: Props) {\n\n    const defaultDialogState = {\n        open: false,\n        textField: \"\",\n        error: false\n    }\n    const emptyLetter = {\n        label: \"\",\n        abbrev: \"\",\n        terminality: false\n    }\n    const emptyGraph: IGraph =\n    {\n        nodes: [],\n        edges: []\n    }\n    const defaultRule: IRule = {\n        name: \"\",\n        lhs: emptyGraph,\n        rhs: []\n    }\n    const [state, setState] = useState({ currentRule: defaultRule, dialogState: defaultDialogState });\n    const theme = useTheme();\n\n    const handleTextChange = (e: any) => {\n        setState({\n            currentRule: state.currentRule, dialogState: {\n                open: true,\n                textField: e.target.value,\n                error: false\n            }\n        })\n        props.changeSelectRule(state.currentRule);\n    }\n    const handleClose = () => {\n        setState({ currentRule: state.currentRule, dialogState: defaultDialogState });\n    };\n\n    const handleSelectChange = (e: any) => {\n        const ruleName = e.target.value\n        /* console.log(e.target.value); */\n        const rightRule = props.rules.find(rule => rule.name == ruleName);\n        if (!rightRule) {\n            return\n        }\n\n        setState({\n            currentRule: rightRule, dialogState: defaultDialogState\n        })\n        props.changeSelectRule(state.currentRule);\n    };\n\n\n    const createRule = (name: string) => {\n        const newRule = {\n            name: name,\n            lhs: {\n                nodes: [],\n                edges: []\n            },\n            rhs: []\n        }\n\n        props.rules.push(newRule);\n        props.changeSelectRule(newRule);\n        setState({ currentRule: newRule, dialogState: defaultDialogState })\n\n    }\n\n    const checkIfRepeated = (ruleName: string) => {\n        for (var i = 0; i < props.rules.length; i++) {\n            if (props.rules[i].name == ruleName) {\n                /* console.log(\"name taken alter the user\") */\n                return true\n            }\n        }\n        return false\n    }\n\n    const handleSubmit = () => {\n        //check if name already exists\n        if (state.dialogState.textField != '' && !checkIfRepeated(state.dialogState.textField)) {\n            createRule(state.dialogState.textField);\n        } else {\n            setState({\n                currentRule: state.currentRule, dialogState: {\n                    open: true,\n                    textField: state.dialogState.textField,\n                    error: true\n                }\n            });\n        }\n\n    };\n\n    useEffect(() => {\n        if (props.rules.length > 0 && state.currentRule.name == '') {\n\n            setState({ currentRule: props.rules[0], dialogState: defaultDialogState })\n        }\n\n    }, []);\n\n    const makeMenuItems = () => {\n        return props.rules.map(rule => {\n            return <MenuItem key={rule.name} value={rule.name}>{rule.name}</MenuItem>\n        })\n    }\n    const handleAddRule = () => {\n\n        setState({\n            currentRule: state.currentRule, dialogState: {\n                open: true,\n                textField: '',\n                error: false\n            }\n        })\n    }\n\n\n    const createLHS = () => {\n\n\n        const returnValue = [];\n        returnValue.push(<GraphComponent graph={state.currentRule.lhs} letter={emptyLetter} manipulate={false} />)\n        return returnValue\n    }\n\n    const createRHS = () => {\n        const rightRule = state.currentRule;\n        if (!rightRule) {\n            return\n        }\n        const rhs = rightRule.rhs\n        const returnValue = [];\n        for (var i = 0; i < rhs.length; i++) {\n\n            returnValue.push(<GraphComponent graph={rhs[i].graph} letter={emptyLetter} manipulate={false} />);\n            if (i != (rhs.length - 1)) {\n                returnValue.push(<Divider flexItem />)\n            }\n\n        }\n        return returnValue\n\n    }\n\n    const handleEditRule = () => {\n        if (state.currentRule.name != \"\") {\n            props.changeSelectRule(state.currentRule)\n        }\n\n    }\n\n    const handleDeleteRule = () => {\n        if (state.currentRule.name != \"\") {\n            for (var i = 0; i < props.rules.length; i++) {\n                if (state.currentRule === props.rules[i]) {\n                    /* console.log(\"deleting rule: \" + props.rules[i].name) */\n                    props.rules.splice(i, 1);\n                }\n            }\n            /* console.log(props.rules); */\n            setState({ currentRule: defaultRule, dialogState: state.dialogState });\n        }\n\n    }\n    return (\n\n        <div >\n            <div>\n                <Select\n\n                    labelId=\"demo-simple-select-label\"\n                    id=\"demo-simple-select\"\n                    variant=\"outlined\"\n                    value={state.currentRule.name}\n                    onChange={handleSelectChange}\n                    style={{ width: '100%' }}\n                >\n                    {makeMenuItems()}\n                </Select>\n            </div>\n            <Divider />\n            <div>\n                <Dialog open={state.dialogState.open} onClose={handleClose}>\n                    <DialogTitle>New Rule</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            Please enter rule name:\n                        </DialogContentText>\n                        <TextField\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            onChange={handleTextChange}\n                            value={state.dialogState.textField}\n                            label=\"Rule Name\"\n                            error={state.dialogState.error}\n                            required\n                            fullWidth\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button onClick={handleSubmit} color=\"primary\">\n                            Create\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Grid container justify='center' spacing={2} >\n                    <Grid className=\"gridElement\" item>\n                        {createLHS()}\n                    </Grid>\n                    <Divider orientation=\"vertical\" flexItem />\n                    <Grid className=\"gridElement\" item >\n                        {createRHS()}\n                    </Grid>\n                </Grid>\n                {/*Figure out how to hide this and the list when there are no rules selected */}\n            </div>\n\n        </div >\n    )\n\n}\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport GraphComponent from './graph.component'\nimport RulesListComponent from './rules-list.component';\nimport { IGraph, IRule } from '../util/graph';\nimport { default as grammar_json } from './dormans-grammar.json';\n\ninterface IGrammar {\n\n    _id?: string,\n    name: string,\n    alphabet_id: string,\n    axiom: IGraph,\n    rules: Array<IRule>,\n}\n\n\ninterface Props {\n}\n\ninterface State {\n    selectedRule: IRule,\n    grammar: IGrammar\n}\n\nexport default function GrammarComponent(props: Props) {\n\n    const emptyLetter = {\n        label: \"\",\n        abbrev: \"\",\n        terminality: false\n    }\n    const emptyGraph: IGraph =\n    {\n        nodes: [],\n        edges: []\n    }\n\n    const defaultRule: IRule = {\n        name: \"\",\n        lhs: emptyGraph,\n        rhs: []\n    }\n    const [state, setState] = useState(\n        {\n            selectedRule: defaultRule,\n            grammar: grammar_json\n        });\n\n    const loadGrammar = () => {\n\n        console.log(\"Invade Poland\")\n        console.log(state.grammar.axiom)\n\n\n    }\n\n\n    const editGraph = (e: any) => {\n\n    }\n\n    const changeCurrentRule = (rule: IRule) => {\n        setState({\n            selectedRule: rule,\n            grammar: state.grammar\n        })\n    }\n\n    const updateGrammar = () => {\n    }\n\n    useEffect(() => {\n\n\n        loadGrammar();\n\n    }, []);\n\n\n    return (\n        <div>\n            <h2 style={{ textAlign: \"center\" }} >Axiom</h2>\n            <div className=\"grammarContainer\">\n                <div className=\"grammarAxiom\">\n                    <GraphComponent graph={state.grammar.axiom} letter={emptyLetter} manipulate={false} />\n                </div>\n            </div>\n            <h2 style={{ textAlign: \"center\" }} >Rules List</h2>\n            <div>\n                <RulesListComponent changeSelectRule={changeCurrentRule} rules={state.grammar.rules} />\n            </div>\n        </div >\n    );\n\n\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport * as Components from './components';\n\nfunction App() {\n  const [state, setState] = React.useState({ route: \"/\" });\n\n\n  return (\n    <div>\n      <Components.GrammarComponent />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}